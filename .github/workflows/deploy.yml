name: Build & Deploy Hugo Site

on:
  push:
    branches: [main]

env:
  SSHSERVER: ${{ secrets.SSHSERVER }}
  SSHPW: ${{ secrets.SSHPW }}
  GITLAB_PAT: ${{ secrets.PAT }}

jobs:
  update:
    name: Update Hugo Modules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v6
        with:
          go-version: "1.25.0"

      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "latest"
          extended: true

      - name: Install dos2unix
        run: sudo apt-get update && sudo apt-get install -y dos2unix

      - name: Update Go and Hugo modules
        run: |
          go mod tidy
          hugo mod get github.com/imfing/hextra
          hugo mod get github.com/gethinode/mod-flexsearch

      - name: Run update script
        run: |
          dos2unix ./build.sh
          chmod +x ./build.sh
          ./build.sh
  
  build:
    name: Build Hugo Site
    runs-on: ubuntu-latest
    needs: update
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v6
        with:
          go-version: "stable"

      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "latest"
          extended: true

      - name: Install dos2unix
        run: sudo apt-get update && sudo apt-get install -y dos2unix

      - name: Run build script
        run: |
          dos2unix ./build.sh
          chmod +x ./build.sh
          ./build.sh

      - name: Hugo Build
        run: |
          hugo mod tidy
          hugo --gc --minify --enableGitInfo

      - uses: actions/upload-artifact@v4
        with:
          name: public-site
          path: public/

  deploy:
    name: Deploy to Remote Server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install rsync and sshpass
        run: sudo apt-get update && sudo apt-get install -y rsync sshpass

      - uses: actions/download-artifact@v5
        with:
          name: public-site
          path: public

      - name: Rsync to server
        run: |
          sshpass -p "$SSHPW" ssh -o StrictHostKeyChecking=no "root@$SSHSERVER" "rm -rf /var/www/vm/* && mkdir -p /var/www/vm"
          sshpass -p "$SSHPW" rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" public/ "root@$SSHSERVER:/var/www/vm/"

  mirror:
    name: Mirror repository to GitLab
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Mirror to GitLab (rebase if needed)
        run: |
          git config user.name "Ilmenauer Schachverein CI"
          git config user.email "info@ilmenauer-schachverein.de"

          git remote add gitlab "https://oauth2:${{ secrets.PAT }}@gitlab.erik-skopp.de/ilmenauerschachverein/turniere/vereinsmeisterschaft.git"
          git fetch gitlab
          git rebase gitlab/main || echo "Nothing to rebase"
          git push gitlab --all
          git push gitlab --tags
