stages:
  - update
  - build
  - deploy

update:
  stage: update
  image: archlinux:latest
  before_script:
    - echo "Updating system and installing Go..."
    - pacman -Syu --noconfirm
    - pacman -S --noconfirm go git hugo dos2unix
  script:
    - |
      echo "Using repository directory: $CI_PROJECT_DIR"
      echo "Fetching latest changes from remote..."
      git fetch origin || echo "Warning: git fetch failed"
      
      echo "Checking out branch $CI_COMMIT_REF_NAME..."
      git checkout $CI_COMMIT_REF_NAME
      git reset --hard origin/$CI_COMMIT_REF_NAME

      echo "Upgrading Go version and dependencies..."
      go install golang.org/dl/latest@latest && latest=$(latest) && go mod edit -go "$latest" && go mod tidy
      hugo mod get github.com/imfing/hextra
      hugo mod get github.com/gethinode/mod-flexsearch


      echo "Executing update scripts..."
      dos2unix ./build.sh
      chmod +x ./build.sh
      ./build.sh

      echo "Configuring Git user..."
      git config user.name "CI Pipeline"
      git config user.email "cipipeline@example.com"

      echo "Staging changes..."
      git add .
      git add content/*
      
      echo "Committing changes..."
      git commit -m "Automatic update of Go, Hugo and Go dependencies [skip ci]" || echo "No changes to commit"

      echo "Setting Git remote with PAT..."
      git remote set-url origin "https://oauth2:${pat}@gitlab.erik-skopp.de/ilmenauerschachverein/turniere/vereinsmeisterschaft.git"
      
      echo "Pulling latest changes..."
      git pull origin $CI_COMMIT_REF_NAME --rebase || echo "No pull needed"

      echo "Pushing changes..."
      git push origin HEAD:$CI_COMMIT_REF_NAME || echo "Push failed, but continuing"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

build:
  stage: build
  image: archlinux:latest
  before_script:
    - pacman -Syu --noconfirm git go hugo python dos2unix
  script:
    - echo "Starting build process using build.sh..."
    - dos2unix ./build.sh
    - chmod +x ./build.sh
    - ./build.sh

    - echo "Running Hugo commands..."
    - hugo mod get
    - hugo mod tidy
    - hugo --gc --minify --enableGitInfo
  artifacts:
    paths:
      - public/
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy:
  stage: deploy
  image: archlinux:latest
  before_script:
    - |
      echo "Installing SSH and rsync..."
      pacman -Syu --noconfirm openssh sshpass rsync
  script:
    - |
      echo "Deleting previous files on server..."
      sshpass -p "$SSHPW" ssh -o StrictHostKeyChecking=no "webuser@$SSHSERVER" "rm -rf /var/www/vm/*"

      echo "Creating directory if not exists..."
      sshpass -p "$SSHPW" ssh -o StrictHostKeyChecking=no "webuser@$SSHSERVER" "mkdir -p /var/www/vm"

      echo "Transferring new files..."
      sshpass -p "$SSHPW" rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" public/ "webuser@$SSHSERVER:/var/www/vm/"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
